{
  "openapi": "3.0.0",
  "info": {
    "title": "Bank API",
    "version": "1.0.0",
    "description": "API for managing bank operations including branches and employees."
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/employees": {
      "get": {
        "tags": ["Employee"],
        "summary": "List all employees",
        "description": "Returns a list of all employees",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Employee"],
        "summary": "Create a new employee",
        "description": "Creates a new employee",
        "requestBody": {
          "description": "Employee object to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Employee created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/employees/{id}": {
      "get": {
        "tags": ["Employee"],
        "summary": "Get employee by ID",
        "description": "Returns a single employee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of employee to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "404": {
            "description": "Employee not found"
          }
        }
      },
      "put": {
        "tags": ["Employee"],
        "summary": "Update an employee",
        "description": "Updates an existing employee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of employee to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated employee object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Employee not found"
          }
        }
      },
      "delete": {
        "tags": ["Employee"],
        "summary": "Delete an employee",
        "description": "Deletes an existing employee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of employee to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Employee deleted successfully"
          },
          "404": {
            "description": "Employee not found"
          }
        }
      }
    },
    "/employees/branch/{branchId}": {
      "get": {
        "tags": ["Employee"],
        "summary": "Find employees by branch",
        "description": "Returns employees for a given branch ID",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No employees found for this branch"
          }
        }
      }
    },
    "/employees/department/{department}": {
      "get": {
        "tags": ["Employee"],
        "summary": "Find employees by department",
        "description": "Returns employees for a given department",
        "parameters": [
          {
            "name": "department",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No employees found for this department"
          }
        }
      }
    },
    "/branches": {
      "get": {
        "tags": ["Branch"],
        "summary": "List all branches",
        "description": "Returns a list of all branches",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Branch"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Branch"],
        "summary": "Create a new branch",
        "description": "Creates a new branch",
        "requestBody": {
          "description": "Branch object to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Branch"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Branch created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/branches/{id}": {
      "get": {
        "tags": ["Branch"],
        "summary": "Get branch by ID",
        "description": "Returns a single branch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of branch to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          },
          "404": {
            "description": "Branch not found"
          }
        }
      },
      "put": {
        "tags": ["Branch"],
        "summary": "Update a branch",
        "description": "Updates an existing branch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of branch to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated branch object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Branch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Branch updated successfully"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Branch not found"
          }
        }
      },
      "delete": {
        "tags": ["Branch"],
        "summary": "Delete a branch",
        "description": "Deletes an existing branch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of branch to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Branch deleted successfully"
          },
          "404": {
            "description": "Branch not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Employee": {
        "type": "object",
        "required": ["name", "position"],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Branch": {
        "type": "object",
        "required": ["name", "location"],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      }
    }
  }
}